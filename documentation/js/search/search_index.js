var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/App.html",[0,0.534,1,1]],["body/components/App.html",[0,0.925,1,1.898,2,1.495,3,1.175,4,0.965,5,1.744,6,1.744,7,1.744,8,0.965,9,2.167,10,1.744,11,2.652,12,2.757,13,2.219,14,3.932,15,2.219,16,3.575,17,2.219,18,3.575,19,1.817,20,0.076,21,1.175,22,1.428,23,1.175,24,0.628,25,1.744,26,2.219,27,2.219,28,1.744,29,2.569,30,1.744,31,1.228,32,1.744,33,1.175,34,1.744,35,0.785,36,1.744,37,1.175,38,1.744,39,1.428,40,1.744,41,0.058,42,0.058]],["title/components/CreateUserComponent.html",[0,0.534,33,1]],["body/components/CreateUserComponent.html",[0,0.642,1,1.202,2,0.657,3,0.391,4,0.321,5,0.58,6,0.58,7,0.58,8,0.321,10,0.58,11,1.647,13,0.974,15,0.974,17,0.974,19,1.972,20,0.078,21,0.391,22,0.475,23,0.391,24,0.209,25,0.58,26,0.974,27,0.974,28,0.58,29,1.477,30,0.58,31,0.539,32,0.58,33,1.202,34,2.375,35,1.261,36,0.58,37,0.391,38,1.26,39,0.475,40,0.58,41,0.026,42,0.039,43,2.732,44,2.732,45,0.58,46,0.391,47,1.57,48,3.096,49,1.202,50,0.974,51,1.211,52,1.211,53,1.57,54,3.206,55,1.576,56,1.601,57,0.974,58,1.835,59,1.835,60,1.246,61,1.211,62,1.566,63,1.566,64,2.03,65,2.03,66,2.03,67,1.566,68,1.566,69,2.03,70,2.03,71,1.566,72,1.211,73,1.211,74,0.261,75,0.539,76,2.375,77,2.251,78,2.572,79,3.206,80,3.054,81,2.473,82,0.974,83,2.379,84,2.379,85,1.835,86,2.473,87,1.26,88,1.751,89,1.57,90,0.934,91,2.379,92,2.216,93,1.57,94,0.974,95,1.57,96,2.379,97,2.379,98,2.379,99,1.211,100,1.46,101,1.835,102,1.57,103,1.209,104,2.473,105,0.934,106,1.211,107,1.57,108,1.57,109,1.57,110,1.57,111,2.216,112,1.57,113,1.57,114,1.57,115,1.211,116,1.57,117,0.934,118,1.783,119,1.211,120,1.211,121,0.934,122,1.57,123,1.57,124,1.57,125,0.741,126,1.566,127,0.934,128,1.57,129,0.934,130,1.211,131,1.211,132,0.391,133,0.475,134,1.835,135,1.57,136,1.57,137,1.57,138,0.934,139,1.477,140,1.211,141,0.934,142,1.57,143,0.974,144,0.72,145,0.58,146,0.58,147,0.72,148,0.58,149,0.58,150,0.934,151,1.211,152,0.934,153,0.475,154,0.934,155,0.72,156,0.934,157,0.72,158,0.934,159,0.58,160,0.72,161,0.934,162,0.72,163,0.72,164,0.58,165,0.934,166,0.475,167,0.72,168,0.72,169,0.934,170,0.934,171,0.72,172,0.72,173,0.934,174,0.934,175,0.934,176,2.03,177,0.934,178,0.934,179,0.934,180,1.032,181,0.475,182,1.032,183,0.934,184,0.934,185,1.57,186,0.58,187,0.934,188,0.934,189,0.934,190,0.934,191,0.934,192,0.934,193,0.974,194,0.934,195,0.72,196,0.934,197,2.379,198,0.934,199,0.934,200,1.211,201,1.57,202,0.934,203,0.974,204,1.211,205,1.211,206,0.934,207,0.934,208,1.211,209,0.934,210,0.934,211,1.57,212,1.57,213,0.934,214,0.934,215,0.934,216,0.934,217,0.934,218,0.934,219,0.934,220,0.934]],["title/components/GridComponent.html",[0,0.534,37,1]],["body/components/GridComponent.html",[0,0.811,1,1.396,2,0.85,3,0.536,4,0.44,5,0.795,6,0.795,7,0.795,8,0.44,10,0.795,11,1.946,13,1.262,15,1.262,17,1.262,19,1.985,20,0.078,21,0.536,22,0.651,23,0.536,24,0.286,25,0.795,26,1.262,27,1.262,28,0.795,29,1.785,30,0.795,31,0.698,32,0.795,33,0.536,34,1.568,35,1.07,36,0.795,37,1.396,38,2.171,39,0.651,40,0.795,41,0.033,42,0.033,45,0.795,46,0.536,48,1.568,56,1.203,60,1.365,61,1.568,62,1.949,63,1.949,67,1.949,68,1.949,71,1.949,72,1.568,73,1.568,74,0.358,75,0.698,76,2.467,77,2.319,78,2.882,81,2.799,82,1.262,85,2.218,87,1.568,88,1.844,94,1.262,103,1.284,104,2.574,106,1.568,111,1.568,115,2.218,118,2.071,119,1.568,120,1.568,125,0.804,132,0.536,133,0.651,139,1.785,140,1.568,143,1.262,144,0.988,145,0.795,146,0.795,147,0.988,148,0.795,153,0.651,157,0.988,159,0.795,160,0.988,162,0.988,163,0.988,167,0.988,168,0.988,171,0.988,172,0.988,180,1.461,181,1.033,182,1.033,193,1.262,205,1.568,221,2.882,222,2.882,223,2.033,224,2.218,225,3.32,226,2.033,227,2.527,228,2.527,229,2.527,230,2.876,231,2.876,232,2.033,233,1.281,234,2.876,235,2.033,236,2.171,237,2.033,238,2.527,239,2.033,240,2.033,241,2.033,242,2.033,243,2.033,244,2.033,245,1.281,246,2.033,247,1.281,248,2.218,249,2.033,250,1.033,251,1.281,252,2.033,253,2.033,254,1.281,255,1.568,256,1.568,257,2.033,258,1.281,259,2.033,260,1.281,261,1.281,262,1.281,263,1.281,264,1.281,265,1.281,266,1.281,267,1.281,268,1.281,269,1.281,270,0.988,271,1.281,272,2.033,273,1.568,274,2.033,275,1.281,276,1.281]],["title/classes/User.html",[24,0.534,35,0.668]],["body/classes/User.html",[3,1.063,4,0.873,8,0.873,20,0.076,23,1.063,24,0.568,31,0.873,35,1.244,41,0.055,42,0.055,46,1.401,49,1.401,50,1.577,55,1.568,56,1.732,74,0.71,75,1.369,87,1.577,88,2.161,99,2.584,100,1.904,125,1.188,131,2.584,139,2.079,143,2.326,180,1.904,181,1.904,182,1.702,250,2.161,277,2.541,278,1.96,279,2.541,280,3.35,281,3.984,282,3.35,283,3.35,284,3.35,285,3.35,286,3.35,287,1.577,288,1.577,289,2.079,290,3.35,291,3.35,292,2.541,293,2.541,294,2.541,295,2.541,296,1.96,297,2.541]],["title/injectables/UserService.html",[60,0.821,298,1.215]],["body/injectables/UserService.html",[3,0.631,4,0.518,8,0.518,12,1.164,19,1.425,20,0.077,21,0.631,23,0.631,24,0.337,31,0.793,35,1.25,41,0.038,42,0.038,46,1.173,49,1.77,55,1.494,56,1.77,57,1.433,58,1.781,60,0.793,74,0.422,75,0.793,76,2.439,77,1.741,82,1.433,86,1.781,88,1.597,100,1.815,103,1.815,125,0.784,132,0.631,133,0.767,134,2.423,146,0.937,148,1.95,153,0.767,166,1.173,180,1.815,181,1.815,182,1.815,186,2.217,203,1.95,204,1.781,225,3.031,236,2.673,250,1.597,270,2.163,273,1.164,287,1.433,288,1.433,289,1.433,296,1.781,298,1.173,299,1.509,300,2.612,301,1.164,302,2.309,303,1.781,304,2.309,305,2.309,306,2.309,307,2.309,308,3.833,309,3.142,310,3.833,311,3.833,312,2.309,313,3.142,314,2.309,315,1.509,316,1.781,317,1.781,318,3.571,319,1.433,320,2.309,321,3.571,322,3.716,323,3.571,324,1.509,325,2.309,326,3.142,327,2.309,328,1.509,329,2.309,330,3.142,331,2.309,332,4.136,333,2.309,334,2.309,335,1.509,336,1.509,337,1.509,338,1.509,339,1.509,340,1.509,341,1.509]],["title/coverage.html",[342,2.481]],["body/coverage.html",[0,0.898,1,1.231,8,1.011,9,2.271,20,0.075,24,0.658,33,1.231,35,1.123,37,1.231,41,0.06,42,0.06,43,2.271,44,2.271,45,2.285,49,1.231,55,1.231,60,1.011,125,0.823,149,1.827,164,1.827,166,1.496,221,2.271,222,2.271,224,2.271,278,2.271,298,1.496,300,2.271,301,2.271,342,2.271,343,2.944,344,2.944,345,2.944,346,2.271,347,2.944,348,2.271,349,3.682,350,3.682,351,2.944,352,2.944,353,2.944,354,2.944,355,2.944,356,2.944,357,2.944,358,2.944,359,2.271,360,2.84,361,2.84,362,3.682,363,3.682,364,2.271,365,2.944]],["title/dependencies.html",[366,1.558,367,2.209]],["body/dependencies.html",[20,0.077,21,1.366,22,1.66,41,0.064,42,0.064,145,2.027,153,1.66,159,2.027,367,2.519,368,3.266,369,3.924,370,3.496,371,3.266,372,3.266,373,3.266,374,2.519,375,3.266,376,3.266,377,3.266,378,3.266,379,3.266]],["title/miscellaneous/functions.html",[380,1.027,381,2.209]],["body/miscellaneous/functions.html",[20,0.07,31,1.385,41,0.056,42,0.056,46,1.431,50,1.628,52,2.023,55,1.794,56,1.687,57,1.628,59,2.023,60,1.385,74,0.733,92,2.638,94,1.628,100,1.333,101,2.023,103,1.934,125,0.956,126,3.111,130,2.638,149,2.123,151,2.638,155,2.935,164,2.123,166,2.049,193,1.628,203,1.628,208,2.023,236,1.628,250,2.049,255,2.935,256,2.023,287,2.123,288,2.123,289,1.628,316,2.638,317,2.023,319,1.628,359,2.023,360,3.111,361,2.023,364,2.023,380,1.333,381,2.023,382,2.622,383,2.622,384,2.622,385,3.42,386,2.622,387,3.42,388,2.622,389,2.622,390,2.622,391,2.622,392,3.42,393,2.622,394,2.622,395,2.622,396,2.622,397,3.42,398,2.622]],["title/index.html",[74,0.565,399,2.02,400,2.02]],["body/index.html",[0,0.82,2,1.018,4,0.836,20,0.053,39,1.237,41,0.053,42,0.053,49,1.018,51,1.878,118,2.431,132,1.362,195,1.878,200,1.878,248,1.878,303,1.878,319,1.511,370,1.878,374,1.878,401,2.434,402,3.668,403,2.434,404,3.256,405,4.082,406,1.878,407,3.256,408,3.668,409,2.434,410,2.434,411,4.082,412,4.201,413,4.201,414,2.434,415,3.256,416,2.434,417,2.434,418,2.434,419,3.256,420,2.434,421,2.434,422,2.434,423,2.434,424,2.434,425,3.256,426,3.256,427,2.434,428,2.434,429,3.668,430,2.434,431,2.434,432,2.434,433,2.434,434,3.668,435,2.434,436,2.434,437,2.434,438,2.434,439,2.434,440,2.434,441,2.434,442,2.434,443,2.434,444,2.434,445,3.256,446,3.668,447,2.434,448,2.434,449,2.434,450,2.434,451,2.434,452,2.434,453,3.668,454,2.434,455,4.201,456,2.434,457,3.256,458,2.434,459,2.434,460,2.434,461,2.434,462,2.434,463,2.434,464,2.434,465,2.434,466,2.434,467,2.434,468,2.434,469,2.434,470,2.434,471,2.434,472,1.511,473,2.434,474,2.434]],["title/modules.html",[475,2.481]],["body/modules.html",[20,0.069,41,0.069,42,0.069,475,2.839]],["title/overview.html",[472,1.997]],["body/overview.html",[2,1.506,20,0.068,24,0.804,41,0.068,42,0.068,298,1.829,472,2.235,476,3.6,477,4.156]],["title/properties.html",[75,0.984,366,1.558]],["body/properties.html",[20,0.072,41,0.068,42,0.068,75,1.25,406,2.808,478,3.64]],["title/miscellaneous/variables.html",[380,1.027,479,2.209]],["body/miscellaneous/variables.html",[20,0.076,41,0.065,42,0.065,74,0.947,125,0.947,132,1.418,133,1.722,186,2.104,346,2.614,348,3.094,380,1.722,479,2.614,480,3.39,481,3.39,482,3.39,483,3.39,484,3.39,485,3.39,486,3.39]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":349,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":478,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":350,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":477,"title":{},"body":{"overview.html":{}}}],["1.5",{"_index":320,"title":{},"body":{"injectables/UserService.html":{}}}],["1/1",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":352,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["123",{"_index":332,"title":{},"body":{"injectables/UserService.html":{}}}],["15",{"_index":97,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["2",{"_index":326,"title":{},"body":{"injectables/UserService.html":{}}}],["2.3.0",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["20.0.0",{"_index":370,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["20.2.0",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":476,"title":{},"body":{"overview.html":{}}}],["3/7",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":358,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":355,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":96,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["7.8.0",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["8/9",{"_index":354,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":351,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":191,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["accessing",{"_index":259,"title":{},"body":{"components/GridComponent.html":{}}}],["actual_component",{"_index":40,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["added",{"_index":330,"title":{},"body":{"injectables/UserService.html":{}}}],["adding",{"_index":305,"title":{},"body":{"injectables/UserService.html":{}}}],["additional",{"_index":464,"title":{},"body":{"index.html":{}}}],["adds",{"_index":329,"title":{},"body":{"injectables/UserService.html":{}}}],["already",{"_index":203,"title":{},"body":{"components/CreateUserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["angular",{"_index":118,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"index.html":{}}}],["angular/cdk",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":159,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":145,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":160,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["angular/material/checkbox",{"_index":157,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["angular/material/core",{"_index":161,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["angular/material/datepicker",{"_index":158,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["angular/material/form",{"_index":154,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["angular/material/input",{"_index":156,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["angular/material/progress",{"_index":162,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["angular/material/table",{"_index":261,"title":{},"body":{"components/GridComponent.html":{}}}],["angular/platform",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":22,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"dependencies.html":{}}}],["app",{"_index":1,"title":{"components/App.html":{}},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"coverage.html":{}}}],["app.html",{"_index":16,"title":{},"body":{"components/App.html":{}}}],["app.scss",{"_index":18,"title":{},"body":{"components/App.html":{}}}],["appconfig",{"_index":348,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":419,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":237,"title":{},"body":{"components/GridComponent.html":{}}}],["array",{"_index":309,"title":{},"body":{"injectables/UserService.html":{}}}],["artifacts",{"_index":438,"title":{},"body":{"index.html":{}}}],["assigns",{"_index":284,"title":{},"body":{"classes/User.html":{}}}],["async",{"_index":94,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"miscellaneous/functions.html":{}}}],["asyncvalidatorfn",{"_index":397,"title":{},"body":{"miscellaneous/functions.html":{}}}],["attached",{"_index":393,"title":{},"body":{"miscellaneous/functions.html":{}}}],["automatically",{"_index":420,"title":{},"body":{"index.html":{}}}],["availability",{"_index":57,"title":{},"body":{"components/CreateUserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["available",{"_index":319,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["avoid",{"_index":241,"title":{},"body":{"components/GridComponent.html":{}}}],["back",{"_index":107,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["before",{"_index":390,"title":{},"body":{"miscellaneous/functions.html":{}}}],["between",{"_index":201,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["boolean",{"_index":131,"title":{},"body":{"components/CreateUserComponent.html":{},"classes/User.html":{}}}],["breaking",{"_index":242,"title":{},"body":{"components/GridComponent.html":{}}}],["browser",{"_index":374,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":434,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":435,"title":{},"body":{"index.html":{}}}],["button",{"_index":116,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["called",{"_index":246,"title":{},"body":{"components/GridComponent.html":{}}}],["calls",{"_index":124,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["cancel",{"_index":212,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["canceling",{"_index":112,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["case",{"_index":243,"title":{},"body":{"components/GridComponent.html":{}}}],["catcherror",{"_index":260,"title":{},"body":{"components/GridComponent.html":{}}}],["catcherror(err",{"_index":266,"title":{},"body":{"components/GridComponent.html":{}}}],["characters",{"_index":98,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["check",{"_index":317,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["checking",{"_index":306,"title":{},"body":{"injectables/UserService.html":{}}}],["checks",{"_index":316,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["checkusername",{"_index":312,"title":{},"body":{"injectables/UserService.html":{}}}],["checkusername(username",{"_index":314,"title":{},"body":{"injectables/UserService.html":{}}}],["choose",{"_index":461,"title":{},"body":{"index.html":{}}}],["class",{"_index":24,"title":{"classes/User.html":{}},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":277,"title":{},"body":{"classes/User.html":{}}}],["cli",{"_index":405,"title":{},"body":{"index.html":{}}}],["code",{"_index":425,"title":{},"body":{"index.html":{}}}],["columns",{"_index":252,"title":{},"body":{"components/GridComponent.html":{}}}],["come",{"_index":459,"title":{},"body":{"index.html":{}}}],["command",{"_index":453,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":63,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["compile",{"_index":436,"title":{},"body":{"index.html":{}}}],["complete",{"_index":195,"title":{},"body":{"components/CreateUserComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":36,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["component.html",{"_index":72,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["component.scss",{"_index":73,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["component.ts",{"_index":45,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"coverage.html":{}}}],["component.ts:26",{"_index":254,"title":{},"body":{"components/GridComponent.html":{}}}],["component.ts:28",{"_index":258,"title":{},"body":{"components/GridComponent.html":{}}}],["component.ts:31",{"_index":251,"title":{},"body":{"components/GridComponent.html":{}}}],["component.ts:33",{"_index":138,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["component.ts:34",{"_index":232,"title":{},"body":{"components/GridComponent.html":{}}}],["component.ts:35",{"_index":129,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["component.ts:37",{"_index":141,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["component.ts:40",{"_index":127,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["component.ts:43",{"_index":89,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["component.ts:44",{"_index":247,"title":{},"body":{"components/GridComponent.html":{}}}],["component.ts:52",{"_index":233,"title":{},"body":{"components/GridComponent.html":{}}}],["component.ts:54",{"_index":117,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["component.ts:64",{"_index":90,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["component.ts:65",{"_index":245,"title":{},"body":{"components/GridComponent.html":{}}}],["component.ts:79",{"_index":105,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["component.ts:87",{"_index":121,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["component/create",{"_index":44,"title":{},"body":{"components/CreateUserComponent.html":{},"coverage.html":{}}}],["component/grid",{"_index":222,"title":{},"body":{"components/GridComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":30,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"index.html":{},"overview.html":{}}}],["confirm",{"_index":208,"title":{},"body":{"components/CreateUserComponent.html":{},"miscellaneous/functions.html":{}}}],["confirmpassword",{"_index":100,"title":{},"body":{"components/CreateUserComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["confirmpasswordkey",{"_index":385,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console.log('failed",{"_index":267,"title":{},"body":{"components/GridComponent.html":{}}}],["console.log(error",{"_index":194,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["const",{"_index":187,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{}}}],["constructor(data",{"_index":280,"title":{},"body":{"classes/User.html":{}}}],["containing",{"_index":290,"title":{},"body":{"classes/User.html":{}}}],["controls",{"_index":93,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["coverage",{"_index":342,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":34,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["creates",{"_index":283,"title":{},"body":{"classes/User.html":{}}}],["createusercomponent",{"_index":33,"title":{"components/CreateUserComponent.html":{}},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"coverage.html":{}}}],["creation",{"_index":111,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["custom",{"_index":53,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["data",{"_index":143,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{}}}],["database",{"_index":311,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":182,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["date:'shortdate",{"_index":275,"title":{},"body":{"components/GridComponent.html":{}}}],["date:\\'shortdate",{"_index":276,"title":{},"body":{"components/GridComponent.html":{}}}],["dateexpiration",{"_index":181,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["default",{"_index":132,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":88,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["delay",{"_index":322,"title":{},"body":{"injectables/UserService.html":{}}}],["demo",{"_index":272,"title":{},"body":{"components/GridComponent.html":{}}}],["demoproject",{"_index":401,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":367,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":46,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["detailed",{"_index":469,"title":{},"body":{"index.html":{}}}],["development",{"_index":407,"title":{},"body":{"index.html":{}}}],["directive",{"_index":28,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["directives",{"_index":39,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"index.html":{}}}],["directory",{"_index":440,"title":{},"body":{"index.html":{}}}],["display",{"_index":257,"title":{},"body":{"components/GridComponent.html":{}}}],["displayed",{"_index":253,"title":{},"body":{"components/GridComponent.html":{}}}],["displayedcolumns",{"_index":229,"title":{},"body":{"components/GridComponent.html":{}}}],["displays",{"_index":223,"title":{},"body":{"components/GridComponent.html":{}}}],["dist",{"_index":439,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["e2e",{"_index":456,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":458,"title":{},"body":{"index.html":{}}}],["element",{"_index":27,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["emits",{"_index":318,"title":{},"body":{"injectables/UserService.html":{}}}],["emitting",{"_index":256,"title":{},"body":{"components/GridComponent.html":{},"miscellaneous/functions.html":{}}}],["enabled",{"_index":180,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["end",{"_index":455,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":388,"title":{},"body":{"miscellaneous/functions.html":{}}}],["err",{"_index":269,"title":{},"body":{"components/GridComponent.html":{}}}],["error",{"_index":193,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"miscellaneous/functions.html":{}}}],["errors",{"_index":244,"title":{},"body":{"components/GridComponent.html":{}}}],["eventcoalescing",{"_index":485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":412,"title":{},"body":{"index.html":{}}}],["execute",{"_index":447,"title":{},"body":{"index.html":{}}}],["exists",{"_index":166,"title":{},"body":{"components/CreateUserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["expiration",{"_index":205,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["export",{"_index":23,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["false",{"_index":134,"title":{},"body":{"components/CreateUserComponent.html":{},"injectables/UserService.html":{}}}],["field",{"_index":155,"title":{},"body":{"components/CreateUserComponent.html":{},"miscellaneous/functions.html":{}}}],["fields",{"_index":387,"title":{},"body":{"miscellaneous/functions.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":424,"title":{},"body":{"index.html":{}}}],["following",{"_index":452,"title":{},"body":{"index.html":{}}}],["form",{"_index":48,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["form.get('confirmpassword')?.haserror('passwordmismatch",{"_index":209,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["form.get('confirmpassword')?.touched",{"_index":210,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["form.get('password')?.invalid",{"_index":206,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["form.get('password')?.touched",{"_index":207,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["form.get('username')?.haserror('maxlength",{"_index":199,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["form.get('username')?.haserror('minlength",{"_index":198,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["form.get('username')?.haserror('required",{"_index":196,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["form.get('username')?.haserror('usernametaken",{"_index":202,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["form.get(\\'confirmpassword\\')?.haserror(\\'passwordmismatch",{"_index":219,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["form.get(\\'confirmpassword\\')?.touched",{"_index":220,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["form.get(\\'password\\')?.invalid",{"_index":217,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["form.get(\\'password\\')?.touched",{"_index":218,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["form.get(\\'username\\')?.haserror(\\'maxlength",{"_index":215,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["form.get(\\'username\\')?.haserror(\\'minlength",{"_index":214,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["form.get(\\'username\\')?.haserror(\\'required",{"_index":213,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["form.get(\\'username\\')?.haserror(\\'usernametaken",{"_index":216,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["formbuilder",{"_index":79,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["formgroup",{"_index":126,"title":{},"body":{"components/CreateUserComponent.html":{},"miscellaneous/functions.html":{}}}],["forms",{"_index":130,"title":{},"body":{"components/CreateUserComponent.html":{},"miscellaneous/functions.html":{}}}],["formsmodule",{"_index":227,"title":{},"body":{"components/GridComponent.html":{}}}],["framework",{"_index":460,"title":{},"body":{"index.html":{}}}],["function",{"_index":361,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":381,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":429,"title":{},"body":{"index.html":{}}}],["generated",{"_index":403,"title":{},"body":{"index.html":{}}}],["getall",{"_index":313,"title":{},"body":{"injectables/UserService.html":{}}}],["getting",{"_index":399,"title":{"index.html":{}},"body":{}}],["grid",{"_index":38,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["gridcomponent",{"_index":37,"title":{"components/GridComponent.html":{}},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"coverage.html":{}}}],["group",{"_index":128,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["handles",{"_index":58,"title":{},"body":{"components/CreateUserComponent.html":{},"injectables/UserService.html":{}}}],["handling",{"_index":240,"title":{},"body":{"components/GridComponent.html":{}}}],["helpbuilding",{"_index":433,"title":{},"body":{"index.html":{}}}],["hook",{"_index":120,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["html",{"_index":26,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["http://localhost:4200",{"_index":418,"title":{},"body":{"index.html":{}}}],["identical",{"_index":389,"title":{},"body":{"miscellaneous/functions.html":{}}}],["identifier",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":61,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["import",{"_index":19,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":13,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["includes",{"_index":51,"title":{},"body":{"components/CreateUserComponent.html":{},"index.html":{}}}],["including",{"_index":468,"title":{},"body":{"index.html":{}}}],["index",{"_index":74,"title":{"index.html":{}},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":135,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["information",{"_index":467,"title":{},"body":{"index.html":{}}}],["initialize",{"_index":291,"title":{},"body":{"classes/User.html":{}}}],["initialized",{"_index":249,"title":{},"body":{"components/GridComponent.html":{}}}],["initializeform",{"_index":83,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["initializes",{"_index":91,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["inject",{"_index":144,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["inject(formbuilder",{"_index":170,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["inject(router",{"_index":168,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["inject(userservice",{"_index":172,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["injectable",{"_index":298,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":299,"title":{},"body":{"injectables/UserService.html":{}}}],["instance",{"_index":139,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{}}}],["interact",{"_index":142,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["jaume",{"_index":331,"title":{},"body":{"injectables/UserService.html":{}}}],["javier",{"_index":334,"title":{},"body":{"injectables/UserService.html":{}}}],["karma",{"_index":448,"title":{},"body":{"index.html":{}}}],["latency",{"_index":323,"title":{},"body":{"injectables/UserService.html":{}}}],["legend",{"_index":25,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["lifecycle",{"_index":119,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["list",{"_index":248,"title":{},"body":{"components/GridComponent.html":{},"index.html":{}}}],["load",{"_index":268,"title":{},"body":{"components/GridComponent.html":{}}}],["loading",{"_index":80,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["loads",{"_index":234,"title":{},"body":{"components/GridComponent.html":{}}}],["loadusers",{"_index":230,"title":{},"body":{"components/GridComponent.html":{}}}],["local",{"_index":410,"title":{},"body":{"index.html":{}}}],["main",{"_index":108,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["matbuttonmodule",{"_index":67,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["match",{"_index":101,"title":{},"body":{"components/CreateUserComponent.html":{},"miscellaneous/functions.html":{}}}],["matcheckboxmodule",{"_index":68,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["matching",{"_index":42,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":69,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["matformfieldmodule",{"_index":65,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["matinputmodule",{"_index":66,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["matnativedatemodule",{"_index":70,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["matprogressspinnermodule",{"_index":71,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["mattablemodule",{"_index":228,"title":{},"body":{"components/GridComponent.html":{}}}],["memory",{"_index":308,"title":{},"body":{"injectables/UserService.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["methods",{"_index":82,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":380,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["models/user",{"_index":146,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"injectables/UserService.html":{}}}],["modify",{"_index":423,"title":{},"body":{"index.html":{}}}],["modules",{"_index":475,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":466,"title":{},"body":{"index.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["namefor",{"_index":430,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":417,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":106,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["navigatetocreateuserform",{"_index":231,"title":{},"body":{"components/GridComponent.html":{}}}],["navigatetogrid",{"_index":84,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["navigation",{"_index":140,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["needs",{"_index":200,"title":{},"body":{"components/CreateUserComponent.html":{},"index.html":{}}}],["new",{"_index":49,"title":{},"body":{"components/CreateUserComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":190,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["ng",{"_index":413,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":85,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["null",{"_index":398,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":289,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["object.assign(this",{"_index":297,"title":{},"body":{"classes/User.html":{}}}],["observable",{"_index":236,"title":{},"body":{"components/GridComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["of(this.users).pipe(delay(2000",{"_index":337,"title":{},"body":{"injectables/UserService.html":{}}}],["of(this.users.some(user",{"_index":340,"title":{},"body":{"injectables/UserService.html":{}}}],["of(user).pipe(delay(2000",{"_index":339,"title":{},"body":{"injectables/UserService.html":{}}}],["one",{"_index":462,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":62,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["open",{"_index":416,"title":{},"body":{"index.html":{}}}],["operation",{"_index":113,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["operations",{"_index":302,"title":{},"body":{"injectables/UserService.html":{}}}],["optimizes",{"_index":442,"title":{},"body":{"index.html":{}}}],["optional",{"_index":288,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["overview",{"_index":472,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":366,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":474,"title":{},"body":{"index.html":{}}}],["param",{"_index":296,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":287,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":281,"title":{},"body":{"classes/User.html":{}}}],["password",{"_index":55,"title":{},"body":{"components/CreateUserComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["passwordkey",{"_index":391,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordmatchvalidator",{"_index":149,"title":{},"body":{"components/CreateUserComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["passwordmatchvalidator('password",{"_index":183,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["passwordmatchvalidator(passwordkey",{"_index":384,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwords",{"_index":211,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["performance",{"_index":443,"title":{},"body":{"index.html":{}}}],["pipes",{"_index":432,"title":{},"body":{"index.html":{}}}],["policy",{"_index":239,"title":{},"body":{"components/GridComponent.html":{}}}],["powerful",{"_index":427,"title":{},"body":{"index.html":{}}}],["private",{"_index":77,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"injectables/UserService.html":{}}}],["production",{"_index":441,"title":{},"body":{"index.html":{}}}],["progress",{"_index":137,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["project",{"_index":402,"title":{},"body":{"index.html":{}}}],["properties",{"_index":75,"title":{"properties.html":{}},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":285,"title":{},"body":{"classes/User.html":{}}}],["providedin",{"_index":336,"title":{},"body":{"injectables/UserService.html":{}}}],["providerouter(routes",{"_index":486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":47,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["providezonechangedetection",{"_index":484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":76,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"injectables/UserService.html":{}}}],["reactive",{"_index":92,"title":{},"body":{"components/CreateUserComponent.html":{},"miscellaneous/functions.html":{}}}],["reactiveformsmodule",{"_index":64,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["readonly",{"_index":78,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["reference",{"_index":473,"title":{},"body":{"index.html":{}}}],["references",{"_index":470,"title":{},"body":{"index.html":{}}}],["reload",{"_index":421,"title":{},"body":{"index.html":{}}}],["represents",{"_index":279,"title":{},"body":{"classes/User.html":{}}}],["required",{"_index":197,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["requires",{"_index":95,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["resources",{"_index":465,"title":{},"body":{"index.html":{}}}],["results",{"_index":41,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieved",{"_index":226,"title":{},"body":{"components/GridComponent.html":{}}}],["retrieves",{"_index":325,"title":{},"body":{"injectables/UserService.html":{}}}],["retrieving",{"_index":304,"title":{},"body":{"injectables/UserService.html":{}}}],["retry",{"_index":238,"title":{},"body":{"components/GridComponent.html":{}}}],["retry(1",{"_index":265,"title":{},"body":{"components/GridComponent.html":{}}}],["return",{"_index":270,"title":{},"body":{"components/GridComponent.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":103,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["ricard",{"_index":333,"title":{},"body":{"injectables/UserService.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/App.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":32,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["router",{"_index":81,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["routeroutlet",{"_index":14,"title":{},"body":{"components/App.html":{}}}],["run",{"_index":411,"title":{},"body":{"index.html":{}}}],["runner",{"_index":450,"title":{},"body":{"index.html":{}}}],["running",{"_index":415,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":153,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["save",{"_index":86,"title":{},"body":{"components/CreateUserComponent.html":{},"injectables/UserService.html":{}}}],["save(user",{"_index":327,"title":{},"body":{"injectables/UserService.html":{}}}],["scaffolding",{"_index":426,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":431,"title":{},"body":{"index.html":{}}}],["second",{"_index":321,"title":{},"body":{"injectables/UserService.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["serveonce",{"_index":414,"title":{},"body":{"index.html":{}}}],["server",{"_index":408,"title":{},"body":{"index.html":{}}}],["service",{"_index":148,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"injectables/UserService.html":{}}}],["service.ts",{"_index":301,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["service.ts:15",{"_index":335,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:25",{"_index":324,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:34",{"_index":328,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:44",{"_index":315,"title":{},"body":{"injectables/UserService.html":{}}}],["services/user",{"_index":147,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["sets",{"_index":235,"title":{},"body":{"components/GridComponent.html":{}}}],["simulate",{"_index":310,"title":{},"body":{"injectables/UserService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["specified",{"_index":102,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["speed",{"_index":444,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":163,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["src/.../app.config.ts",{"_index":480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../match",{"_index":382,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../username",{"_index":383,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.config.ts",{"_index":346,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":9,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/components/create",{"_index":43,"title":{},"body":{"components/CreateUserComponent.html":{},"coverage.html":{}}}],["src/app/components/grid",{"_index":221,"title":{},"body":{"components/GridComponent.html":{},"coverage.html":{}}}],["src/app/models/user.ts",{"_index":278,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.ts:10",{"_index":282,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:6",{"_index":295,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:7",{"_index":294,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:8",{"_index":292,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:9",{"_index":293,"title":{},"body":{"classes/User.html":{}}}],["src/app/services/user",{"_index":300,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/validators/match",{"_index":359,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/validators/username",{"_index":364,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":409,"title":{},"body":{"index.html":{}}}],["started",{"_index":400,"title":{"index.html":{}},"body":{}}],["state",{"_index":123,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["statements",{"_index":345,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":437,"title":{},"body":{"index.html":{}}}],["string",{"_index":250,"title":{},"body":{"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":17,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["submission",{"_index":59,"title":{},"body":{"components/CreateUserComponent.html":{},"miscellaneous/functions.html":{}}}],["submits",{"_index":122,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["successful",{"_index":110,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["such",{"_index":303,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["suits",{"_index":463,"title":{},"body":{"index.html":{}}}],["system",{"_index":50,"title":{},"body":{"components/CreateUserComponent.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":224,"title":{},"body":{"components/GridComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":152,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["taken",{"_index":204,"title":{},"body":{"components/CreateUserComponent.html":{},"injectables/UserService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["test",{"_index":449,"title":{},"body":{"index.html":{}}}],["testing",{"_index":457,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":454,"title":{},"body":{"index.html":{}}}],["tests",{"_index":446,"title":{},"body":{"index.html":{}}}],["this.form",{"_index":174,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["this.form.value",{"_index":188,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["this.formbuilder",{"_index":169,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["this.formbuilder.group",{"_index":175,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["this.initializeform",{"_index":173,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["this.loading",{"_index":185,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["this.loadusers",{"_index":262,"title":{},"body":{"components/GridComponent.html":{}}}],["this.navigatetogrid",{"_index":192,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["this.router",{"_index":167,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["this.router.navigate(['/form",{"_index":271,"title":{},"body":{"components/GridComponent.html":{}}}],["this.router.navigate(['/main",{"_index":184,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["this.users",{"_index":263,"title":{},"body":{"components/GridComponent.html":{}}}],["this.users.push(user",{"_index":338,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice",{"_index":171,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["this.userservice.getall().pipe",{"_index":264,"title":{},"body":{"components/GridComponent.html":{}}}],["this.userservice.save(user).pipe(take(1)).subscribe",{"_index":189,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["through",{"_index":114,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["tools",{"_index":428,"title":{},"body":{"index.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["true",{"_index":186,"title":{},"body":{"components/CreateUserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":386,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":125,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":115,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["unique",{"_index":99,"title":{},"body":{"components/CreateUserComponent.html":{},"classes/User.html":{}}}],["uniqueness",{"_index":396,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unit",{"_index":445,"title":{},"body":{"index.html":{}}}],["use",{"_index":451,"title":{},"body":{"index.html":{}}}],["used",{"_index":255,"title":{},"body":{"components/GridComponent.html":{},"miscellaneous/functions.html":{}}}],["user",{"_index":35,"title":{"classes/User.html":{}},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.dateexpiration",{"_index":274,"title":{},"body":{"components/GridComponent.html":{}}}],["user.username",{"_index":273,"title":{},"body":{"components/GridComponent.html":{},"injectables/UserService.html":{}}}],["username",{"_index":56,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["username)).pipe(delay(1500",{"_index":341,"title":{},"body":{"injectables/UserService.html":{}}}],["usernameexistsvalidator",{"_index":164,"title":{},"body":{"components/CreateUserComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["usernameexistsvalidator(this.userservice",{"_index":179,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["usernameexistsvalidator(userservice",{"_index":394,"title":{},"body":{"miscellaneous/functions.html":{}}}],["users",{"_index":225,"title":{},"body":{"components/GridComponent.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":60,"title":{"injectables/UserService.html":{}},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["uses",{"_index":307,"title":{},"body":{"injectables/UserService.html":{}}}],["using",{"_index":404,"title":{},"body":{"index.html":{}}}],["validate",{"_index":395,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validation",{"_index":52,"title":{},"body":{"components/CreateUserComponent.html":{},"miscellaneous/functions.html":{}}}],["validator",{"_index":151,"title":{},"body":{"components/CreateUserComponent.html":{},"miscellaneous/functions.html":{}}}],["validator.ts",{"_index":360,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["validatorfn",{"_index":392,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":54,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["validators.maxlength(15",{"_index":178,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["validators.minlength(5",{"_index":177,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["validators.required",{"_index":176,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["validators/match",{"_index":150,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["validators/username",{"_index":165,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["value",{"_index":133,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":286,"title":{},"body":{"classes/User.html":{}}}],["var",{"_index":29,"title":{},"body":{"components/App.html":{},"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["variable",{"_index":347,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":479,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":406,"title":{},"body":{"index.html":{},"properties.html":{}}}],["view",{"_index":109,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["visit",{"_index":471,"title":{},"body":{"index.html":{}}}],["void",{"_index":104,"title":{},"body":{"components/CreateUserComponent.html":{},"components/GridComponent.html":{}}}],["whenever",{"_index":422,"title":{},"body":{"index.html":{}}}],["whether",{"_index":136,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["zone.js",{"_index":378,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.html',\n  styleUrl: './app.scss'\n})\nexport class App {\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CreateUserComponent', 'selector': 'app-create-user-component'},{'name': 'GridComponent', 'selector': 'app-grid-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateUserComponent.html":{"url":"components/CreateUserComponent.html","title":"component - CreateUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/create-user-component/create-user-component.ts\n\n\n\n    \n        Description\n    \n    \n        CreateUserComponent provides a form to create a new user in the system.\nIt includes form validation, custom validators for password matching and username availability, and handles submission to the UserService.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-user-component\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            MatFormFieldModule\n                            MatInputModule\n                            MatButtonModule\n                            MatCheckboxModule\n                            MatDatepickerModule\n                            MatNativeDateModule\n                            MatProgressSpinnerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./create-user-component.html\n            \n\n\n\n            \n                styleUrl\n                ./create-user-component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Readonly\n                                formBuilder\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Private\n                                    Readonly\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initializeForm\n                            \n                            \n                                    Public\n                                navigateToGrid\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/create-user-component/create-user-component.ts:43\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/create-user-component/create-user-component.ts:64\n                        \n                    \n\n\n            \n                \n                        Initializes the reactive form with controls, validators, and async validators.\n\nusername requires 5-15 characters and must be unique.\npassword and confirmPassword must match.\nusername, password and confirmPassword must be specified.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        navigateToGrid\n                        \n                    \n                \n            \n            \n                \n                        \n                    navigateToGrid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/create-user-component/create-user-component.ts:79\n                        \n                    \n\n\n            \n                \n                        Navigates back to the main grid view after successful user creation or canceling the operation through UI button.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/create-user-component/create-user-component.ts:54\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that initializes the user creation form.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        save\n                        \n                    \n                \n            \n            \n                \n                        \n                    save()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/create-user-component/create-user-component.ts:87\n                        \n                    \n\n\n            \n                \n                        Submits the form to create a new user.\nHandles form loading state and calls the UserService to save the user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/create-user-component/create-user-component.ts:40\n                        \n                    \n\n            \n                \n                    Reactive form group for user creation\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormBuilder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/create-user-component/create-user-component.ts:35\n                        \n                    \n\n            \n                \n                    Angular FormBuilder to create reactive forms\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/create-user-component/create-user-component.ts:43\n                        \n                    \n\n            \n                \n                    Indicates whether the form submission is in progress\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/create-user-component/create-user-component.ts:33\n                        \n                    \n\n            \n                \n                    Angular Router instance for navigation\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/create-user-component/create-user-component.ts:37\n                        \n                    \n\n            \n                \n                    UserService instance to interact with user data\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user-service';\nimport { passwordMatchValidator } from '../../validators/match-password-validator';\nimport { take } from 'rxjs';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { usernameExistsValidator } from '../../validators/username-exists-validator';\n\n\n/**\n * CreateUserComponent provides a form to create a new user in the system.\n *\n * It includes form validation, custom validators for password matching and username availability, and handles submission to the UserService.\n */\n@Component({\n\tselector: 'app-create-user-component',\n\timports: [CommonModule, ReactiveFormsModule, MatFormFieldModule, MatInputModule, MatButtonModule, MatCheckboxModule, MatDatepickerModule, MatNativeDateModule, MatProgressSpinnerModule],\n\ttemplateUrl: './create-user-component.html',\n\tstyleUrl: './create-user-component.scss'\n})\nexport class CreateUserComponent implements OnInit {\n\n\t/** Angular Router instance for navigation */\n\tprivate readonly router: Router;\n\t/** Angular FormBuilder to create reactive forms */\n\tprivate readonly formBuilder: FormBuilder;\n\t/** UserService instance to interact with user data */\n\tprivate readonly userService: UserService;\n\n\t/** Reactive form group for user creation */\n\tpublic form!: FormGroup;\n\n\t/** Indicates whether the form submission is in progress */\n\tpublic loading: boolean = false;\n\n\tconstructor() {\n\t\tthis.router = inject(Router);\n\t\tthis.formBuilder = inject(FormBuilder);\n\t\tthis.userService = inject(UserService);\n\t}\n\n\t/**\n   * Angular lifecycle hook that initializes the user creation form.\n   */\n\tpublic ngOnInit(): void {\n\t\tthis.initializeForm();\n\t}\n\n\t/**\n   * Initializes the reactive form with controls, validators, and async validators.\n   * - `username` requires 5-15 characters and must be unique.\n   * - `password` and `confirmPassword` must match.\n   * - `username`, `password` and `confirmPassword` must be specified.\n   */\n\tprivate initializeForm(): void {\n\t\tthis.form = this.formBuilder.group({\n\t\t\tusername: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(15)], [usernameExistsValidator(this.userService)]],\n\t\t\tpassword: ['', Validators.required],\n\t\t\tconfirmPassword: ['', Validators.required],\n\t\t\tenabled: [false],\n\t\t\tdateExpiration: [new Date()]\n\t\t},\n\t\t\t{ validators: passwordMatchValidator('password', 'confirmPassword') }\n\t\t);\n\t}\n\n\t/**\n   * Navigates back to the main grid view after successful user creation or canceling the operation through UI button.\n   */\n\tpublic navigateToGrid(): void {\n\t\tthis.router.navigate(['/main']);\n\t}\n\n\t/**\n   * Submits the form to create a new user.\n   * Handles form loading state and calls the UserService to save the user.\n   */\n\tpublic save(): void {\n\t\tthis.loading = true;\n\t\tconst user = new User({ ...this.form.value });\n\n\t\tthis.userService.save(user).pipe(take(1)).subscribe({\n\t\t\tnext: _ => {\n\t\t\t\tthis.navigateToGrid();\n\t\t\t},\n\t\t\terror: (error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t},\n\t\t\tcomplete: () => {\n\t\t\t\tthis.loading = false;\n\t\t\t}\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n    Create User\n\n\n\n\n    \n        \n            Username\n            \n            @if (form.get('username')?.hasError('required')) {\n                Username is required\n            }\n            @if (form.get('username')?.hasError('minlength') || form.get('username')?.hasError('maxlength')) {\n                Username needs between 5 and 15 characters\n            }\n            @if (form.get('username')?.hasError('usernameTaken')) {\n                Username is already taken\n            }\n        \n\n        \n            Date Expiration\n            \n            \n            \n        \n    \n\n    \n        \n            Password\n            \n            @if (form.get('password')?.invalid && form.get('password')?.touched) {\n                \n                    Password is required\n                \n            }\n        \n\n        \n            Confirm Password\n            \n            @if (form.get('confirmPassword')?.hasError('passwordMismatch') && form.get('confirmPassword')?.touched) {\n                \n                    Passwords do not match\n                \n            }\n        \n\n        Enabled\n        \n        \n            CANCEL\n            @if (loading) {\n                \n                    \n                \n            }\n            @else {\n                SAVE\n            }\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Create User                        Username                        @if (form.get(\\'username\\')?.hasError(\\'required\\')) {                Username is required            }            @if (form.get(\\'username\\')?.hasError(\\'minlength\\') || form.get(\\'username\\')?.hasError(\\'maxlength\\')) {                Username needs between 5 and 15 characters            }            @if (form.get(\\'username\\')?.hasError(\\'usernameTaken\\')) {                Username is already taken            }                            Date Expiration                                                                        Password                        @if (form.get(\\'password\\')?.invalid && form.get(\\'password\\')?.touched) {                                    Password is required                            }                            Confirm Password                        @if (form.get(\\'confirmPassword\\')?.hasError(\\'passwordMismatch\\') && form.get(\\'confirmPassword\\')?.touched) {                                    Passwords do not match                            }                Enabled                            CANCEL            @if (loading) {                                                                }            @else {                SAVE            }            '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CreateUserComponent', 'selector': 'app-create-user-component'},{'name': 'GridComponent', 'selector': 'app-grid-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridComponent.html":{"url":"components/GridComponent.html","title":"component - GridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GridComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/grid-component/grid-component.ts\n\n\n\n    \n        Description\n    \n    \n        GridComponent displays a table of users retrieved from the UserService.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-grid-component\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            MatTableModule\n                            MatButtonModule\n                            MatCheckboxModule\n                            MatProgressSpinnerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./grid-component.html\n            \n\n\n\n            \n                styleUrl\n                ./grid-component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                displayedColumns\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Public\n                                users$\n                            \n                            \n                                    Private\n                                    Readonly\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadUsers\n                            \n                            \n                                    Public\n                                navigateToCreateUserForm\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/grid-component/grid-component.ts:34\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/grid-component/grid-component.ts:52\n                        \n                    \n\n\n            \n                \n                        Loads the users from the UserService and sets the observable users$.\nApplies a retry policy and error handling to avoid breaking the UI in case of errors.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        navigateToCreateUserForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    navigateToCreateUserForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/grid-component/grid-component.ts:65\n                        \n                    \n\n\n            \n                \n                        Navigates to the user creation form. Called from UI\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/grid-component/grid-component.ts:44\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that loads the list of users when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['username', 'dateExpiration', 'enabled']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/grid-component/grid-component.ts:31\n                        \n                    \n\n            \n                \n                    Columns displayed in the user table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/grid-component/grid-component.ts:26\n                        \n                    \n\n            \n                \n                    Angular Router instance used for navigation\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/grid-component/grid-component.ts:34\n                        \n                    \n\n            \n                \n                    Observable emitting the list of users to display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/grid-component/grid-component.ts:28\n                        \n                    \n\n            \n                \n                    UserService instance for accessing user data\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user-service';\nimport { User } from '../../models/user';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { catchError, Observable, of, retry } from 'rxjs';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n\n/**\n * GridComponent displays a table of users retrieved from the UserService.\n */\n@Component({\n\tselector: 'app-grid-component',\n\timports: [CommonModule, FormsModule, MatTableModule, MatButtonModule, MatCheckboxModule, MatProgressSpinnerModule],\n\ttemplateUrl: './grid-component.html',\n\tstyleUrl: './grid-component.scss'\n})\nexport class GridComponent implements OnInit {\n\n\t/** Angular Router instance used for navigation */\n\tprivate readonly router: Router;\n\t/** UserService instance for accessing user data */\n\tprivate readonly userService: UserService;\n\n\t/** Columns displayed in the user table */\n\tpublic readonly displayedColumns: string[] = ['username', 'dateExpiration', 'enabled'];\n\n\t/** Observable emitting the list of users to display */\n\tpublic users$!: Observable;\n\n\tconstructor() {\n\t\tthis.router = inject(Router);\n\t\tthis.userService = inject(UserService);\n\t}\n\n\t/**\n   * Angular lifecycle hook that loads the list of users when the component is initialized.\n   */\n\tpublic ngOnInit(): void {\n\t\tthis.loadUsers();\n\t}\n\n\t/**\n   * Loads the users from the UserService and sets the observable `users$`.\n   * Applies a retry policy and error handling to avoid breaking the UI in case of errors.\n   */\n\tprivate loadUsers(): void {\n\t\tthis.users$ = this.userService.getAll().pipe(\n\t\t\tretry(1),\n\t\t\tcatchError(err => {\n\t\t\t\tconsole.log('Failed to load users', err);\n\t\t\t\treturn of([]);\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n   * Navigates to the user creation form. Called from UI\n   */\n\tpublic navigateToCreateUserForm(): void {\n\t\tthis.router.navigate(['/form']);\n\t}\n}\n\n    \n\n    \n        @let users = users$ | async;\n\n\n    Angular Demo\n    CREATE USER\n\n\n\n    @if (users) {\n        \n\n            \n                Username\n                \n                    {{ user.username }}\n                \n            \n        \n            \n                Date of Expiration\n                \n                    {{ user.dateExpiration | date:'shortDate' }}\n                \n            \n        \n            \n                Enabled\n                \n                    \n                \n            \n        \n            \n            \n        \n    }\n    @else {\n        \n            \n        \n    }\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let users = users$ | async;    Angular Demo    CREATE USER    @if (users) {                                    Username                                    {{ user.username }}                                                                Date of Expiration                                    {{ user.dateExpiration | date:\\'shortDate\\' }}                                                                Enabled                                                                                                            }    @else {                                }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CreateUserComponent', 'selector': 'app-create-user-component'},{'name': 'GridComponent', 'selector': 'app-grid-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a user in the system.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                dateExpiration\n                            \n                            \n                                enabled\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/user.ts:10\n                            \n                        \n\n                \n                    \n                            Creates a new User instance and assigns the provided values.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An object containing user properties to initialize.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateExpiration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:6\n                        \n                    \n\n            \n                \n                    The unique username of the user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    /** The unique username of the user */\n    username!: string;\n    password!: string;\n    confirmPassword!: string;\n    enabled!: boolean;\n    dateExpiration!: Date;\n\n    /**\n     * Creates a new `User` instance and assigns the provided values.\n     * @param {Partial} data An object containing user properties to initialize.\n     */\n    constructor(data: Partial) {\n        Object.assign(this, data);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles user operations such as retrieving, adding, and checking users.\nThis service uses an in-memory array to simulate a database.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkUsername\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:44\n                        \n                    \n\n\n            \n                \n                        Checks if a username is already taken in the in-memory \"database\".\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The username to check for availability.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable that emits true if the username already exists, false if it is available, after a 1.5-second delay to simulate latency.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:25\n                        \n                    \n\n\n            \n                \n                        Retrieves all users from the in-memory \"database\".\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable that emits an array of all users after a 2-second delay to simulate latency.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        save\n                        \n                    \n                \n            \n            \n                \n                        \n                    save(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-service.ts:34\n                        \n                    \n\n\n            \n                \n                        Adds a new user to the in-memory \"database\".\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user object to be added.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable that emits the added user after a 2-second delay to simulate latency.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\tnew User({ username: 'Jaume', password: '123', confirmPassword: '123', enabled: true, dateExpiration: new Date() }),\n\t\tnew User({ username: 'Ricard', password: '123', confirmPassword: '123', enabled: false, dateExpiration: new Date() }),\n\t\tnew User({ username: 'Javier', password: '123', confirmPassword: '123', enabled: true, dateExpiration: new Date() })\n\t]\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user-service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/user';\nimport { delay, Observable, of } from 'rxjs';\n\n\n/**\n * Service that handles user operations such as retrieving, adding, and checking users.\n * This service uses an in-memory array to simulate a database.\n */\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class UserService {\n\n\tprivate users: User[] = [\n\t\tnew User({ username: 'Jaume', password: '123', confirmPassword: '123', enabled: true, dateExpiration: new Date() }),\n\t\tnew User({ username: 'Ricard', password: '123', confirmPassword: '123', enabled: false, dateExpiration: new Date() }),\n\t\tnew User({ username: 'Javier', password: '123', confirmPassword: '123', enabled: true, dateExpiration: new Date() })\n\t];\n\n\t/**\n   * Retrieves all users from the in-memory \"database\".\n   * @returns {Observable} An observable that emits an array of all users after a 2-second delay to simulate latency.\n   */\n\tpublic getAll(): Observable {\n\t\treturn of(this.users).pipe(delay(2000));\n\t}\n\n\t/**\n   * Adds a new user to the in-memory \"database\".\n   * @param {User} user The user object to be added.\n   * @returns {Observable} An observable that emits the added user after a 2-second delay to simulate latency.\n   */\n\tpublic save(user: User): Observable {\n\t\tthis.users.push(user);\n\t\treturn of(user).pipe(delay(2000));\n\t}\n\n\t/**\n   * Checks if a username is already taken in the in-memory \"database\".\n   * @param {string} username The username to check for availability.\n   * @returns {Observable} An observable that emits `true` if the username already exists, `false` if it is available, after a 1.5-second delay to simulate latency.\n   */\n\tpublic checkUsername(username: string): Observable {\n\t\treturn of(this.users.some(user => user.username == username)).pipe(delay(1500));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.ts\n            \n            component\n            App\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/create-user-component/create-user-component.ts\n            \n            component\n            CreateUserComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/components/grid-component/grid-component.ts\n            \n            component\n            GridComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            User\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/services/user-service.ts\n            \n            injectable\n            UserService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                        src/app/validators/match-password-validator.ts\n            \n            function\n            passwordMatchValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/validators/username-exists-validator.ts\n            \n            function\n            usernameExistsValidator\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^20.2.0\n        \n            @angular/common : ^20.0.0\n        \n            @angular/compiler : ^20.0.0\n        \n            @angular/core : ^20.0.0\n        \n            @angular/forms : ^20.0.0\n        \n            @angular/material : ^20.2.0\n        \n            @angular/platform-browser : ^20.0.0\n        \n            @angular/router : ^20.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            passwordMatchValidator   (src/.../match-password-validator.ts)\n                        \n                        \n                            usernameExistsValidator   (src/.../username-exists-validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/validators/match-password-validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(passwordKey: string, confirmPasswordKey: string)\n                \n            \n\n\n\n\n            \n                \n                        Validator function that checks if two password fields in a FormGroup match.\nUsed in reactive forms to ensure that password and confirmPassword fields are identical before submission.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                passwordKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the password field in the FormGroup.\n\n\n                                            \n                                        \n                                        \n                                                confirmPasswordKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the confirm password field in the FormGroup.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                A ValidatorFn that can be attached to a FormGroup.\n\n                            \n                \n            \n        \n    \n    src/app/validators/username-exists-validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usernameExistsValidator\n                        \n                    \n                \n            \n            \n                \nusernameExistsValidator(userService: UserService)\n                \n            \n\n\n\n\n            \n                \n                        Async validator that checks if a username already exists in the system.\nUsed in reactive forms to validate the uniqueness of a username field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userService\n                                            \n                                                            UserService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe UserService used to check username availability.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AsyncValidatorFn\n\n                        \n                            \n                                An AsyncValidatorFn that returns an observable emitting a validation error object if the username exists, or null if it is available.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDemoProject\nThis project was generated using Angular CLI version 20.0.0.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
